c1:
valgrind:
==8325== Memcheck, a memory error detector
==8325== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8325== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==8325== Command: ./t
==8325==
==8325== Invalid write of size 4
==8325==    at 0x1091B8: main (c1.c:9)
==8325==  Address 0x4a9e068 is 0 bytes after a block of size 40 alloc'd
==8325==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==8325==    by 0x109185: main (c1.c:6)
==8325==
==8325==
==8325== HEAP SUMMARY:
==8325==     in use at exit: 0 bytes in 0 blocks
==8325==   total heap usage: 1 allocs, 1 frees, 40 bytes allocated
==8325==
==8325== All heap blocks were freed -- no leaks are possible
==8325==
==8325== For lists of detected and suppressed errors, rerun with: -s
==8325== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)



c2:
valgrind:

==8523== Memcheck, a memory error detector
==8523== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8523== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==8523== Command: ./t
==8523==
==8523== Conditional jump or move depends on uninitialised value(s)
==8523==    at 0x48E9B56: __vfprintf_internal (vfprintf-internal.c:1516)
==8523==    by 0x48D381E: printf (printf.c:33)
==8523==    by 0x1091F1: main (c2.c:11)
==8523==
==8523== Use of uninitialised value of size 8
==8523==    at 0x48CD33B: _itoa_word (_itoa.c:177)
==8523==    by 0x48E8B3D: __vfprintf_internal (vfprintf-internal.c:1516)
==8523==    by 0x48D381E: printf (printf.c:33)
==8523==    by 0x1091F1: main (c2.c:11)
==8523==
==8523== Conditional jump or move depends on uninitialised value(s)
==8523==    at 0x48CD34C: _itoa_word (_itoa.c:177)
==8523==    by 0x48E8B3D: __vfprintf_internal (vfprintf-internal.c:1516)
==8523==    by 0x48D381E: printf (printf.c:33)
==8523==    by 0x1091F1: main (c2.c:11)
==8523==
==8523== Conditional jump or move depends on uninitialised value(s)
==8523==    at 0x48E9643: __vfprintf_internal (vfprintf-internal.c:1516)
==8523==    by 0x48D381E: printf (printf.c:33)
==8523==    by 0x1091F1: main (c2.c:11)
==8523==
==8523== Conditional jump or move depends on uninitialised value(s)
==8523==    at 0x48E8C85: __vfprintf_internal (vfprintf-internal.c:1516)
==8523==    by 0x48D381E: printf (printf.c:33)
==8523==    by 0x1091F1: main (c2.c:11)
==8523==
0 1 2 3 4 5 6 7 8 0
==8523==
==8523== HEAP SUMMARY:
==8523==     in use at exit: 0 bytes in 0 blocks
==8523==   total heap usage: 1 allocs, 1 frees, 1,024 bytes allocated
==8523==
==8523== All heap blocks were freed -- no leaks are possible
==8523==
==8523== Use --track-origins=yes to see where uninitialised values come from
==8523== For lists of detected and suppressed errors, rerun with: -s
==8523== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 0 from 0)


c3:
valgrind:
==8599== Memcheck, a memory error detector
==8599== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8599== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==8599== Command: ./t
==8599==
==8599==
==8599== HEAP SUMMARY:
==8599==     in use at exit: 3,600 bytes in 9 blocks
==8599==   total heap usage: 10 allocs, 1 frees, 4,000 bytes allocated
==8599==
==8599== 3,600 bytes in 9 blocks are definitely lost in loss record 1 of 1
==8599==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==8599==    by 0x10918E: main (c3.c:9)
==8599==
==8599== LEAK SUMMARY:
==8599==    definitely lost: 3,600 bytes in 9 blocks
==8599==    indirectly lost: 0 bytes in 0 blocks
==8599==      possibly lost: 0 bytes in 0 blocks
==8599==    still reachable: 0 bytes in 0 blocks
==8599==         suppressed: 0 bytes in 0 blocks
==8599==
==8599== For lists of detected and suppressed errors, rerun with: -s
==8599== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)


c4:
valgrind:
==8609== Memcheck, a memory error detector
==8609== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8609== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==8609== Command: ./t
==8609==
==8609== Use of uninitialised value of size 8
==8609==    at 0x10917A: main (c4.c:13)
==8609==
==8609== Invalid write of size 4
==8609==    at 0x10917A: main (c4.c:13)
==8609==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==8609==
==8609==
==8609== Process terminating with default action of signal 11 (SIGSEGV)
==8609==  Access not within mapped region at address 0x0
==8609==    at 0x10917A: main (c4.c:13)
==8609==  If you believe this happened as a result of a stack
==8609==  overflow in your program's main thread (unlikely but
==8609==  possible), you can try to increase the size of the
==8609==  main thread stack using the --main-stacksize= flag.
==8609==  The main thread stack size used in this run was 8388608.
==8609==
==8609== HEAP SUMMARY:
==8609==     in use at exit: 0 bytes in 0 blocks
==8609==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==8609==
==8609== All heap blocks were freed -- no leaks are possible
==8609==
==8609== Use --track-origins=yes to see where uninitialised values come from
==8609== For lists of detected and suppressed errors, rerun with: -s
==8609== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Falha de segmentação (imagem do núcleo gravada)

c5:
valgrind:
==8731== Memcheck, a memory error detector
==8731== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8731== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==8731== Command: ./t
==8731==
intArray[374]: 374
==8731==
==8731== HEAP SUMMARY:
==8731==     in use at exit: 4,000 bytes in 1 blocks
==8731==   total heap usage: 2 allocs, 1 frees, 5,024 bytes allocated
==8731==
==8731== 4,000 bytes in 1 blocks are definitely lost in loss record 1 of 1
==8731==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==8731==    by 0x1091E7: main (c5.c:9)
==8731==
==8731== LEAK SUMMARY:
==8731==    definitely lost: 4,000 bytes in 1 blocks
==8731==    indirectly lost: 0 bytes in 0 blocks
==8731==      possibly lost: 0 bytes in 0 blocks
==8731==    still reachable: 0 bytes in 0 blocks
==8731==         suppressed: 0 bytes in 0 blocks
==8731==
==8731== For lists of detected and suppressed errors, rerun with: -s
==8731== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)


c6:
valgrind:
==8745== Memcheck, a memory error detector
==8745== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8745== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==8745== Command: ./t
==8745==
==8745== Invalid free() / delete / delete[] / realloc()
==8745==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==8745==    by 0x109215: main (c6.c:21)
==8745==  Address 0x4a9e090 is 0 bytes inside a block of size 40 free'd
==8745==    at 0x484DCD3: realloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==8745==    by 0x1091B4: resizeArray (c6.c:12)
==8745==    by 0x109202: main (c6.c:19)
==8745==  Block was alloc'd at
==8745==    at 0x484DA83: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==8745==    by 0x1091EC: main (c6.c:18)
==8745==
==8745==
==8745== HEAP SUMMARY:
==8745==     in use at exit: 60 bytes in 1 blocks
==8745==   total heap usage: 3 allocs, 3 frees, 116 bytes allocated
==8745==
==8745== 60 bytes in 1 blocks are definitely lost in loss record 1 of 1
==8745==    at 0x484DCD3: realloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==8745==    by 0x1091B4: resizeArray (c6.c:12)
==8745==    by 0x109202: main (c6.c:19)
==8745==
==8745== LEAK SUMMARY:
==8745==    definitely lost: 60 bytes in 1 blocks
==8745==    indirectly lost: 0 bytes in 0 blocks
==8745==      possibly lost: 0 bytes in 0 blocks
==8745==    still reachable: 0 bytes in 0 blocks
==8745==         suppressed: 0 bytes in 0 blocks
==8745==
==8745== For lists of detected and suppressed errors, rerun with: -s
==8745== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)


c7:
valgrind:
==8754== Memcheck, a memory error detector
==8754== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8754== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==8754== Command: ./t
==8754==
==8754== Invalid write of size 1
==8754==    at 0x1091BC: main (c7.c:10)
==8754==  Address 0x4a9e05a is 0 bytes after a block of size 26 alloc'd
==8754==    at 0x484DA83: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==8754==    by 0x109183: main (c7.c:5)
==8754==
==8754==
==8754== HEAP SUMMARY:
==8754==     in use at exit: 0 bytes in 0 blocks
==8754==   total heap usage: 1 allocs, 1 frees, 26 bytes allocated
==8754==
==8754== All heap blocks were freed -- no leaks are possible
==8754==
==8754== For lists of detected and suppressed errors, rerun with: -s
==8754== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

c8:
valgrind:
==8781== Memcheck, a memory error detector
==8781== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8781== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==8781== Command: ./t
==8781==
==8781== Invalid read of size 1
==8781==    at 0x1091D2: main (c8.c:9)
==8781==  Address 0x4a9e0ba is 0 bytes after a block of size 26 alloc'd
==8781==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==8781==    by 0x1091B1: main (c8.c:6)
==8781==
==8781==
==8781== HEAP SUMMARY:
==8781==     in use at exit: 0 bytes in 0 blocks
==8781==   total heap usage: 2 allocs, 2 frees, 53 bytes allocated
==8781==
==8781== All heap blocks were freed -- no leaks are possible
==8781==
==8781== For lists of detected and suppressed errors, rerun with: -s
==8781== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)


c9:
valgrind:
==8791== Memcheck, a memory error detector
==8791== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8791== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==8791== Command: ./t
==8791==
==8791== Invalid write of size 4
==8791==    at 0x10916B: f (c9.c:6)
==8791==    by 0x109180: main (c9.c:11)
==8791==  Address 0x4a9e068 is 0 bytes after a block of size 40 alloc'd
==8791==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==8791==    by 0x10915E: f (c9.c:5)
==8791==    by 0x109180: main (c9.c:11)
==8791==
==8791==
==8791== HEAP SUMMARY:
==8791==     in use at exit: 40 bytes in 1 blocks
==8791==   total heap usage: 1 allocs, 0 frees, 40 bytes allocated
==8791==
==8791== 40 bytes in 1 blocks are definitely lost in loss record 1 of 1
==8791==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==8791==    by 0x10915E: f (c9.c:5)
==8791==    by 0x109180: main (c9.c:11)
==8791==
==8791== LEAK SUMMARY:
==8791==    definitely lost: 40 bytes in 1 blocks
==8791==    indirectly lost: 0 bytes in 0 blocks
==8791==      possibly lost: 0 bytes in 0 blocks
==8791==    still reachable: 0 bytes in 0 blocks
==8791==         suppressed: 0 bytes in 0 blocks
==8791==
==8791== For lists of detected and suppressed errors, rerun with: -s
==8791== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)


c10:
valgrind:
