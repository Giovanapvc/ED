GDB inicial:
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./a...
(gdb) break 21

(gdb) run

[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main () at c5.c:21
21	    printf("intArray[%d]: %d\n", randNum, intArray[randNum]);
$1 = (int *) 0x5555555592a0

(gdb) continue

intArray[278]: 278
[Inferior 1 (process 11451) exited normally]

Valgrind inicial:
==11477== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11477== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==11477== Command: ./a
==11477== 
intArray[24]: 24
==11477== 
==11477== HEAP SUMMARY:
==11477==     in use at exit: 4,000 bytes in 1 blocks
==11477==   total heap usage: 2 allocs, 1 frees, 5,024 bytes allocated
==11477== 
==11477== 4,000 bytes in 1 blocks are definitely lost in loss record 1 of 1
==11477==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==11477==    by 0x1091E7: main (c5.c:9)
==11477== 
==11477== LEAK SUMMARY:
==11477==    definitely lost: 4,000 bytes in 1 blocks
==11477==    indirectly lost: 0 bytes in 0 blocks
==11477==      possibly lost: 0 bytes in 0 blocks
==11477==    still reachable: 0 bytes in 0 blocks
==11477==         suppressed: 0 bytes in 0 blocks
==11477== 
==11477== For lists of detected and suppressed errors, rerun with: -s
==11477== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)


O erro, noticiado pelo Valgrind, é de vazamento de memória. No caso, a memória foi dinamicamente alocada em um arranjo de inteiros, porém, ao final do código, após a realização e saída do sorteio do número, essa memória não foi desalocada do heap. No gdb, ao colocar um breakpoint na saída do numero sorteado e printando o endereço de memória do arranjo, percebe-se que ele não foi desalocado até o fim do programa. Esse erro é relatado no Valgrind, ao noticiar que, no heap, um bloco de memória foi alocada mas não foi liberada. Para corrigir o problema, basta liberar a memória do heap ao final do programa: 

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./a...
(gdb) run

[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
intArray[748]: 748
[Inferior 1 (process 12339) exited normally]


==12345== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12345== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==12345== Command: ./a
==12345== 
intArray[910]: 910
==12345== 
==12345== HEAP SUMMARY:
==12345==     in use at exit: 0 bytes in 0 blocks
==12345==   total heap usage: 2 allocs, 2 frees, 5,024 bytes allocated
==12345== 
==12345== All heap blocks were freed -- no leaks are possible
==12345== 
==12345== For lists of detected and suppressed errors, rerun with: -s
==12345== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



