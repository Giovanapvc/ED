GDB inicial:
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./a...
(gdb) break c11.c:9
Ponto de parada 1 at 0x11a3: file c11.c, line 9.
(gdb) run

[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main () at c11.c:9
9	        strcpy(msg, "Holberton");
(gdb) print msg 
$1 = 0x5555555592a0 ""
(gdb) print strcpy
$2 = {<text gnu-indirect-function variable, no debug info>} 0x7ffff7ca8410 <strcpy_ifunc>
(gdb) continue
Continuing.
21655, Rolberton
[Inferior 1 (process 21655) exited normally]

Valgrind inicial:
==21662== Memcheck, a memory error detector
==21662== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==21662== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==21662== Command: ./a
==21662== 
==21662== Invalid write of size 2
==21662==    at 0x1091B4: main (c11.c:9)
==21662==  Address 0x4a9e048 is 0 bytes after a block of size 8 alloc'd
==21662==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==21662==    by 0x10919E: main (c11.c:8)
==21662== 
==21662== Invalid read of size 1
==21662==    at 0x484ED24: strlen (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==21662==    by 0x48E9DB0: __vfprintf_internal (vfprintf-internal.c:1517)
==21662==    by 0x48D381E: printf (printf.c:33)
==21662==    by 0x1091E2: main (c11.c:11)
==21662==  Address 0x4a9e048 is 0 bytes after a block of size 8 alloc'd
==21662==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==21662==    by 0x10919E: main (c11.c:8)
==21662== 
==21662== Invalid read of size 1
==21662==    at 0x48FE7B4: _IO_new_file_xsputn (fileops.c:1218)
==21662==    by 0x48FE7B4: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1196)
==21662==    by 0x48EA08B: outstring_func (vfprintf-internal.c:239)
==21662==    by 0x48EA08B: __vfprintf_internal (vfprintf-internal.c:1517)
==21662==    by 0x48D381E: printf (printf.c:33)
==21662==    by 0x1091E2: main (c11.c:11)
==21662==  Address 0x4a9e048 is 0 bytes after a block of size 8 alloc'd
==21662==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==21662==    by 0x10919E: main (c11.c:8)
==21662== 
==21662== Invalid read of size 1
==21662==    at 0x48534C8: mempcpy (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==21662==    by 0x48FE6E4: _IO_new_file_xsputn (fileops.c:1235)
==21662==    by 0x48FE6E4: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1196)
==21662==    by 0x48EA08B: outstring_func (vfprintf-internal.c:239)
==21662==    by 0x48EA08B: __vfprintf_internal (vfprintf-internal.c:1517)
==21662==    by 0x48D381E: printf (printf.c:33)
==21662==    by 0x1091E2: main (c11.c:11)
==21662==  Address 0x4a9e048 is 0 bytes after a block of size 8 alloc'd
==21662==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==21662==    by 0x10919E: main (c11.c:8)
==21662== 
21662, Rolberton
==21662== 
==21662== HEAP SUMMARY:
==21662==     in use at exit: 8 bytes in 1 blocks
==21662==   total heap usage: 2 allocs, 1 frees, 1,032 bytes allocated
==21662== 
==21662== 8 bytes in 1 blocks are definitely lost in loss record 1 of 1
==21662==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==21662==    by 0x10919E: main (c11.c:8)
==21662== 
==21662== LEAK SUMMARY:
==21662==    definitely lost: 8 bytes in 1 blocks
==21662==    indirectly lost: 0 bytes in 0 blocks
==21662==      possibly lost: 0 bytes in 0 blocks
==21662==    still reachable: 0 bytes in 0 blocks
==21662==         suppressed: 0 bytes in 0 blocks
==21662== 
==21662== For lists of detected and suppressed errors, rerun with: -s
==21662== ERROR SUMMARY: 7 errors from 5 contexts (suppressed: 0 from 0)



O problema central do código, que desencadeia vários erros de memória noticiados pelo Valgrind, mas que não são suficientes para o GDB detectar erros, é que a memória alocada para o ponteiro "msg" possui 8 bytes, enquanto que a string designada a ela tem 9 caracteres("Holberton"). Logo, há uma tentativa de alocação de espaço de memória inválido. Além disso, a memória não é liberada do heap ao final do programa, resultando em um vazamento de 8 bytes. Para solucionar o problema, pode-se acrescentar 2 byte de memória alocada no ponteiro (sendo 10 bytes, ja que um deles é o nulo que encerra a string), para que a string seja sobrescrita, e a liberação da memória do ponteiro ao final do programa:

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./a...
(gdb) run

[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
21980, Rolberton
[Inferior 1 (process 21980) exited normally]



==21985== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==21985== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==21985== Command: ./a
==21985== 
21985, Rolberton
==21985== 
==21985== HEAP SUMMARY:
==21985==     in use at exit: 0 bytes in 0 blocks
==21985==   total heap usage: 2 allocs, 2 frees, 1,034 bytes allocated
==21985== 
==21985== All heap blocks were freed -- no leaks are possible
==21985== 
==21985== For lists of detected and suppressed errors, rerun with: -s
==21985== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



