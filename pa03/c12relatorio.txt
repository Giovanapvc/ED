GDB inicial:
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main () at c12.c:6
6	    if(x == 0) {
(gdb) print x
$1 = 0
(gdb) continue
Continuing.
X is zero[Inferior 1 (process 22486) exited normally]



Valgrind inicial:
==22497== Memcheck, a memory error detector
==22497== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==22497== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==22497== Command: ./a
==22497== 
==22497== Conditional jump or move depends on uninitialised value(s)
==22497==    at 0x109159: main (c12.c:6)
==22497== 
X is zero==22497== 
==22497== HEAP SUMMARY:
==22497==     in use at exit: 0 bytes in 0 blocks
==22497==   total heap usage: 1 allocs, 1 frees, 1,024 bytes allocated
==22497== 
==22497== All heap blocks were freed -- no leaks are possible
==22497== 
==22497== Use --track-origins=yes to see where uninitialised values come from
==22497== For lists of detected and suppressed errors, rerun with: -s
==22497== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)


Apesar do código executar e aparentemente apresentar uma saída correta, como mostra o breakpoint do GDB, isso se deve provavelmete pelo fato de que um valor padrão de uma variável não inicializada é 0. Porém, o problema apresentado pelo Valgrind é justamente a falta de inicialização da variável, seguida de uma estrutura condicional (if) que depende de seu valor, uma situação contraditória. Assim, a variável deve possuir algum valor atribuído para que a condição seja realmente testada:

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./a...
(gdb) run

[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
X is zero[Inferior 1 (process 22677) exited normally]


==22690== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==22690== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==22690== Command: ./a
==22690== 
X is zero==22690== 
==22690== HEAP SUMMARY:
==22690==     in use at exit: 0 bytes in 0 blocks
==22690==   total heap usage: 1 allocs, 1 frees, 1,024 bytes allocated
==22690== 
==22690== All heap blocks were freed -- no leaks are possible
==22690== 
==22690== For lists of detected and suppressed errors, rerun with: -s
==22690== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


